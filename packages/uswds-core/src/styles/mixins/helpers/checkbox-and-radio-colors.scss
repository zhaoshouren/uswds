@use "sass:color";
@use "sass:list";

@use "../../functions" as *;
@use "../../settings" as *;
@use "../../variables/border-high-contrast" as *;
@use "../general/add-background-svg" as *;
@use "format-input" as *;
@use "format-label" as *;

@mixin checkbox-colors($args...) {
  @include -checkbox-and-radio-colors($input-type: "checkbox", $args...);
}

@mixin radio-colors($args...) {
  @include -checkbox-and-radio-colors($input-type: "radio", $args...);
}

// Applies active state colors to tile variant backgrounds and borders.
// Used by :checked checkbox and radio labels as well as :indeterminate checkboxes.
//
// @parameter $input-active-color - active input color determined by -checkbox-and-radio-colors mixin.
@mixin active-tile-colors($input-active-color) {
  background-color: color.adjust(color($input-active-color), $alpha: -0.9);
  border-color: color($input-active-color);

  @media (forced-colors: active) {
    border: ButtonText solid units("05");
  }
}

// Applies active state colors to input backgrounds and borders.
// Used by :checked checkbox and radio inputs as well as :indeterminate checkboxes.
//
// @parameter $input-active-color - active input color determined by -checkbox-and-radio-colors mixin.
@mixin active-input-colors($input-active-color) {
  background-color: color($input-active-color);
  box-shadow: 0 0 0 units($theme-input-select-border-width)
    color($input-active-color);
}

@mixin -checkbox-and-radio-colors(
  $bg-color: $theme-input-background-color,
  $selected-color: "default",
  $input-type: null
) {
  $input-text-color: get-color-token-from-bg($bg-color);
  $input-text-color-disabled: get-color-token-from-bg(
    $bg-color,
    "disabled",
    "gray-50"
  );
  $input-bg-color: if(
    $bg-color == "default",
    $theme-body-background-color,
    $bg-color
  );
  $input-active-color: list.nth(
    get-link-tokens-from-bg($bg-color, $preferred-link-token: $selected-color),
    1
  );
  $input-border-alpha: -0;
  $tile-border-color: color("gray-20");
  $tile-border-color--disabled: color("gray-10");
  $tile-box-shadow--disabled: 0 0 0 units($theme-input-select-border-width)
    color($input-text-color-disabled);
  $input-darkmode: if(
    color.lightness(color($input-bg-color)) < 50%,
    true,
    false
  );
  $input-checkmark: if($input-darkmode, "correct8-alt", "correct8");
  $input-indeterminate: if(
    $input-darkmode,
    "checkbox-indeterminate-alt",
    "checkbox-indeterminate"
  );

  .usa-#{$input-type} {
    background: color($input-bg-color);
  }

  .usa-#{$input-type}__label {
    color: color($input-text-color);

    &::before {
      background: color($input-bg-color);
      box-shadow: 0 0 0 units($theme-input-select-border-width)
        color.adjust(color($input-text-color), $alpha: $input-border-alpha);

      @media (forced-colors: active) {
        outline: $border-high-contrast;
        outline-offset: 2px;
      }
    }
  }
  .usa-#{$input-type}__input {
    &:checked {
      @include format-input {
        @include active-input-colors($input-active-color);
      }
    }
    &:disabled,
    &[aria-disabled="true"] {
      @include format-label {
        color: color($input-text-color-disabled);
        cursor: not-allowed;

        @media (forced-colors: active) {
          color: GrayText;
        }
      }
      @include format-input {
        background-color: color($input-bg-color);
        box-shadow: $tile-box-shadow--disabled;
      }
    }
    &--tile {
      @include format-label {
        background-color: color($input-bg-color);
        border: units($theme-input-tile-border-width) solid $tile-border-color;
        color: color($input-text-color);
      }
      &:checked {
        @include format-label {
          @include active-tile-colors($input-active-color);
        }
      }
      &:disabled,
      &[aria-disabled="true"] {
        @include format-label {
          border-color: $tile-border-color--disabled;
        }

        &:checked,
        &:indeterminate,
        &[data-indeterminate] {
          @include format-label {
            background-color: color($input-bg-color);
          }
        }
      }
    }
  }

  @if $input-type == "checkbox" {
    .usa-checkbox__input {
      // Adding indeterminate styles here avoids style conflicts from setting in .usa-#{$input-type}__input due to
      // radio buttons receiving :indeterminate state when none are selected.
      &:indeterminate,
      &[data-indeterminate] {
        @include format-input {
          @include add-background-svg($input-indeterminate);
          @include active-input-colors($input-active-color);
          background-position: center center;
          background-size: units(1.5) auto;

          @media (forced-colors: active) {
            @include add-background-svg("checkbox-indeterminate-alt");
            background-color: color(SelectedItem);
          }
        }

        &:disabled,
        &[aria-disabled="true"] {
          @include format-input {
            box-shadow: $tile-box-shadow--disabled;
          }

          @include format-label {
            border-color: $tile-border-color--disabled;
          }
        }
      }
      &--tile {
        &:indeterminate,
        &[data-indeterminate] {
          @include format-label {
            @include active-tile-colors($input-active-color);
          }
        }
      }
      &:checked,
      &:checked:disabled,
      &:checked[aria-disabled="true"] {
        @include format-input {
          @include add-background-svg($input-checkmark);
        }

        @media (forced-colors: active) {
          @include format-input {
            @include add-background-svg("correct8-alt");
          }
        }
      }
      &:checked:disabled,
      &:checked[aria-disabled="true"],
      &:indeterminate:disabled,
      &:indeterminate[aria-disabled="true"],
      &[data-indeterminate]:disabled,
      &[data-indeterminate][aria-disabled="true"] {
        @include format-input {
          background-color: color($input-text-color-disabled);
          @media (forced-colors: active) {
            background-color: color(GrayText);
          }
        }
      }
    }
  }

  @if $input-type == "radio" {
    .usa-radio__input {
      &:checked {
        @include format-input {
          box-shadow:
            0 0 0 units($theme-input-select-border-width)
              color($input-active-color),
            inset 0 0 0 units($theme-input-select-border-width)
              color($input-bg-color);

          @media (forced-colors: active) {
            background-color: ButtonText;
          }
        }
      }
      &:checked:disabled,
      &:checked[aria-disabled="true"] {
        @include format-input {
          background-color: color($input-text-color-disabled);
          box-shadow:
            0 0 0 2px color($input-text-color-disabled),
            inset 0 0 0 2px color($input-bg-color);

          @media (forced-colors: active) {
            background-color: color(GrayText);
          }
        }
      }
    }
  }
}
